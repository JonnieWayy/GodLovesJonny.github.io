<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on Jonathan`s Blog</title>
    <link>http://jonathanwayy.xyz/tags/windows/</link>
    <description>Recent content in windows on Jonathan`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2020</copyright>
    <lastBuildDate>Sun, 12 Sep 2021 15:35:04 +0800</lastBuildDate><atom:link href="http://jonathanwayy.xyz/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>炼丹杂记 -- Windows 下使用 pip 安装 opendr</title>
      <link>http://jonathanwayy.xyz/2021/ldp_win_opendr/</link>
      <pubDate>Sun, 12 Sep 2021 15:35:04 +0800</pubDate>
      
      <guid>http://jonathanwayy.xyz/2021/ldp_win_opendr/</guid>
      <description>问题描述 直接使用 pip install opendr 会报一个 failed with exit code 1181 的错误。 解决办法 首先安装 glfw，是 opengl 的一个框架： pip install glfw 在这里下载 opendr 后构建并安装： &amp;gt; git clone https://github.com/polmorenoc/opendr.git &amp;gt; cd ./opendr/opendr &amp;gt; python</description>
    </item>
    
    <item>
      <title>炼丹杂记 -- Python 2 安装 opencv-python 包出错解决办法</title>
      <link>http://jonathanwayy.xyz/2021/ldp_python2_opencv/</link>
      <pubDate>Sat, 11 Sep 2021 21:46:05 +0800</pubDate>
      
      <guid>http://jonathanwayy.xyz/2021/ldp_python2_opencv/</guid>
      <description>问题描述 在为使用 Python 2.7 的虚拟环境使用如下命令安装 OpenCV 时 pip2 install opencv-python 出现了如下报错： TypeError: &#39;NoneType&#39; object is not iterable 原因分析 出现这种情况是因为最新版的 OpenCV 不再支持 Python 2.7，而</description>
    </item>
    
    <item>
      <title>BLWL[38] 激活 vmware 中的 Windows 操作系统</title>
      <link>http://jonathanwayy.xyz/2021/vmware-windows-activate/</link>
      <pubDate>Tue, 27 Apr 2021 14:19:09 +0800</pubDate>
      
      <guid>http://jonathanwayy.xyz/2021/vmware-windows-activate/</guid>
      <description>为了方便平时工作（主要是为了用 visio 做图），之前在 vmware 中配置了一个 Windows 10 的虚拟机。 一般的在物理机上适用的激活方式尝试后没能成功在虚拟机中激活 Wind</description>
    </item>
    
  </channel>
</rss>
